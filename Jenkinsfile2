pipeline {
    agent any

    tools {
        // Install the Maven version configured as "M3" and add it to the path.
        maven "maven"
    }

    environment {     
    DOCKERHUB_CREDENTIALS= credentials('dockerhub_login')     
    } 

    stages {
        stage('Clean workspace') {
            steps {
                cleanWs()
            }
        }
        stage('Code download') {
            steps {
                git branch: 'main', url: 'https://github.com/kedar1704/mvc_1.git'
            }
        }
        stage('Build') {
            steps {
                sh 'mvn clean test install'
            }
          }
        stage('Dockerize app') {
            steps {
                sh 'pwd'
                sh 'docker build -t java_app:$BUILD_NUMBER .'
            }
          }
        stage('Docker images') {
            steps {
                sh 'docker images'
            }
          }
         stage('run docker image') {
            steps {
                sh "docker run -d -p 9090:8080 java_app:$BUILD_NUMBER"
            }
          }
        stage('Wait for Approval') {
            steps {
                script {
                    def userInput = input(
                        message: 'Do you want to continue?',
                        parameters: [
                            [$class: 'BooleanParameterDefinition', 
                             defaultValue: false, 
                             description: 'Click "Yes" to continue pushing to dockerhub or "No" to abort', 
                             name: 'Push to dockerhub']
                        ]
                    )
                    
                    if (userInput) {
                        echo 'Deploying the image to dockerhub'
                    } else {
                        echo 'Dont push image. Aborting pipeline.'
                        currentBuild.result = 'ABORTED'
                        error('Pipeline aborted by user.')
                    }
                }
            }
        }
        stage('Push image to dockerhub') {
            steps {
                sh 'echo $DOCKERHUB_CREDENTIALS_PSW | docker login -u $DOCKERHUB_CREDENTIALS_USR --password-stdin'                		
	            echo 'Login Completed'
		sh 'docker push java_app:$BUILD_NUMBER'
            }
          }
    }
}
